Design Document:

1) General Overview and User Guide
	General Overview:
	When the program is first run, the user will be prompted to either register an account, login with an existing account, or exit the program. If the user decides to create a new account, then they will be prompted to enter in their email address and password. Once a valid email and password has been entered, the user will be brought to the airport main menu page. If the user already has an account, then they will simply log into the system by typing in their email and password. On the main page, the user will be able to search and book a flight, as well as view a list of existing bookings. If the user is an airline agent, they will also be able to record the flight departure time and the flight arrival time. 

	User Guide:
	1) Start by running the .jar application in the terminal by typing ‘java -jar c291Project1.jar’.
	2) Log into the UA Travel application by typing in the letter 'l' and entering you email and password. If you do not have an account, then you can register for one for free by typing in the letter 'r' and entering your email and a 4 character password.
	3) To view a list of flights, select option 1 in the Airport Main Menu. From here you will want to type in the airport where you will be leaving, the destination airport, and the date of your departure. If you do not know the airport code, type in the name of the airport to get the airport code you need. A list of available flights will be displayed and ordered by price. If you wish to order the result based on the connections, type ********************,
	4) To book a flight from the list of flights, type ********************, 
	5) To cancel a booking that you have made, type in option 2 from the main menu. Next, type in the ticket number to select your booking. After you have selected you booking, type in the letter 'D' and your booking will be canceled.
	6) To record the departure time of a flight, select option 3 from the main menu. From here type in the flight number of the flight that you want to record, then type in its scheduled departure time and its actual departure time.
	7) to record the arrival time of a flight, select option 4 from the main menu. Next, type in the flight number of the flight that you wan to record, then type in its actual arrival time.

2) Detailed System Design
	The application is comprised of three main classes:
	1) UserConsoleInterface.java: The user console interface is the user interface that will be displayed when the user runs the application through the terminal. The class acts as a menu for the application that the user can move through as they use the application. For example, on the main menu an option ‘1’ can be entered and the user console will switch to the menu option corresponding to that number. The class takes in user inputs and send them to the SQLManager to verify that the information exists in a table or to add data into a table. If the console requested information from the SQLManager, the manager will return the result of a query and it will give it to the user console to display on the menu. After the data is displayed the menu gets rebuilt underneath the outputted data and the user can now decide what they want to do with this data. 

	2) SQLManager.java: The sql manager handles various sql functionality by executing queries in the Queries class and getting the results. The manager waits to be called upon by the UserConsoleInterface for one of four reasons. The first is to verify that data is in an existing table. For example, the UserConsoleInterface uses this class to verify that a user has entered in the correct login information. The second use is to add and update data in sql tables. The third main use of this class is to get a list of results from an sql query such as a list of flights, and give them to the interface to be displayed to the user. The final use of the manager is to update information in the tables. This is mainly used when an airline agents wants to change the arrival or departure time of a plane.

	3) Queries.java: The Queries class is used to create various sql queries o be used by the sql manager. It is used by the sql manager to initialize table data as well as to return the queries used to get results from sql tables. When registering and logging in users, the SQLmanager uses the queries class to create queries that will check to see if the user is in the users tables and to insert valid user data into the users table.

3) Testing Strategy
	Each query is individually tested for correctness using a sql test script and the test data from assignment 2. Once a query is correctly implemented, It gets placed into the Queries.java class to be used by the sql manager.

4) Group-work Breakdown Strategy
